version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 3s
      retries: 5

  migrations:
    build:
      context: .
      target: migrator
    container_name: go-migrate
    env_file:
      - .env
    networks:
      - mynetwork
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure


  app:
    build:
      context: .
      target: app
    container_name: go-app
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynetwork
    restart: on-failure



networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data: